===============================================================================================
Shuffle the array
===============================================================================================

    Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn]
    Return the array in the form [x1,y1,x2,y2,...,xn,yn]

    eg
    Input: nums = [2,5,1,3,4,7], n = 3
    Output: [2,3,5,4,1,7]
    n represent mid index

    Logic:
        - write out idx of original array & idx of desired array
        eg:
            original: 0 1 2 3 4 5
            desired: 0 3 1 4 2 5

        - identify pattern:
            if even -> 0 1 2 (create int even_idx = 0)
            if odd -> 3 4 5 (use n given in param)


    class Solution {
        public int[] shuffle(int[] nums, int n) {
            int[] ans = new int[nums.length];
            int even_idx = 0;

            for (int i = 0; i < nums.length; i++) {
                if (i % 2 == 0) {
                    ans[i] = nums[even_idx];
                    even_idx++;
                } else {
                    ans[i] = nums[n];
                    n++;
                }
            }
            return ans;
        }
    }


