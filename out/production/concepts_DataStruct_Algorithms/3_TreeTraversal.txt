====================================================================================================
Tree Traversal
====================================================================================================
    
        - traverse every value in a tree & put values in arraylist
        - multiple ways to traverse a tree
            - Breadth First Search (traverse level by level, completing all rows first)
            - Depth First Search (traverse left-subtree first then right) (3 ways to perform Depth First Search)
                - Pre-Order
                - Post-Order
                - In-Order

====================================================================================================
Breadth-First Search
====================================================================================================

    - using queue data structure & Arraylist to store results
        - init queue & arraylist for result

    1) enqueue root node
    2) dequeue node value to results array list
    3) enqueue left & right child node to queue
    4) dequeue left child node
    5) enqueue left & right child node of the dequeued left node (if any)
    - repeat process until all nodes visited

    * once queue empty, all values printed

====================================================================================================
Depth-First Search (Pre-order)
====================================================================================================
    
    - value appended first before traversing deeper into subtree
    - always go to the deepest left node first then right node
    - center-left-right

====================================================================================================
Depth-First Search (Post-order)
====================================================================================================

    - traverse to the deepest left-node first, then append value to list
    - then go back to higher level and check right subtree
    - left-right-center

====================================================================================================
Depth-First Search (In-order)
====================================================================================================

    - traverse to the deepest left-node first, then append value to list
    - go back to center & append value to list
    - traverse to right subtree & append value to list
    - left - center - right